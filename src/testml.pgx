# TestML Document
document: 
  <meta_section>
  <test_section>
  <data_section>?


# General Tokens
escape: /[0nt]/
line: /<ANY>*<EOL>/
blank_line: /<SPACE>*<EOL>/
comment: /<HASH><line>/
ws: /(?:<SPACE>|<EOL>|<comment>)/

quoted_string: <single_quoted_string> | <double_quoted_string>

single_quoted_string: /(?:<SINGLE>(([^<BREAK><BACK><SINGLE>]|<BACK><SINGLE>|<BACK><BACK>)*?)<SINGLE>)/

double_quoted_string: /(?:<DOUBLE>(([^<BREAK><BACK><DOUBLE>]|<BACK><DOUBLE>|<BACK><BACK>|<BACK><escape>)*?)<DOUBLE>)/

unquoted_string: /([^<SPACES><BREAK><HASH>](?:[^<BREAK><HASH>]*[^<SPACES><BREAK><HASH>])?)/


# TestML Meta Section
meta_section:
  /(?:<comment>|<blank_line>)*/
  [ <meta_testml_statement> | `No TestML meta directive found` ]
  [ <meta_statement> | <comment> | <blank_line> ]*

meta_testml_statement: /<PERCENT>TestML:<SPACE>+(<testml_version>)(?:<SPACE>+<comment>|<EOL>)/

testml_version: /(<DIGIT><DOT><DIGIT>+)/

meta_statement: /<PERCENT>(<meta_keyword>):<SPACE>+(<meta_value>)(?:<SPACE>+<comment>|<EOL>)/

meta_keyword: /(?:<core_meta_keyword>|<user_meta_keyword>)/
core_meta_keyword: /(?:Title|Data|Plan|BlockMarker|PointMarker)/
user_meta_keyword: /<LOWER><WORD>*/

meta_value: /(?:<single_quoted_string>|<double_quoted_string>|<unquoted_string>)/


# TestML Meta Section
test_section: [ <ws> | <test_statement> ]*

test_statement:
  <test_expression>
  <assertion_call>?
  [ /<SEMI>/ | `You seem to be missing a semicolon` ]

test_expression:
  <sub_expression>
  [
    <!assertion_call_test>
    <call_indicator>
    <sub_expression>
  ]*

sub_expression:
  <point_call>  |
  <string_call> |
  <transform_call>

point_call: /(<STAR><LOWER><WORD>*)/

string_call: <quoted_string>

transform_call:
  <transform_name>
  <transform_argument_list>?

transform_name: <user_transform> | <core_transform>

user_transform: /(<LOWER><WORD>*)/

core_transform: /(<UPPER><WORD>*)/

call_indicator: /(?:<DOT><ws>*|<ws>*<DOT>)/

transform_argument_list:
  /<LPAREN><ws>*/
  <transform_arguments>?
  /<ws>*<RPAREN>/

transform_arguments:
  <transform_argument>
  [ /<ws>*<COMMA><ws>*/ <transform_argument> ]*

transform_argument: <sub_expression>

assertion_call_test: /<call_indicator>(?:EQ|OK|HAS)<LPAREN>/

assertion_call: <assertion_eq> | <assertion_ok> | <assertion_has>

assertion_eq: <assertion_operator_eq> | <assertion_function_eq>

assertion_operator_eq:
  /<ws>+<EQUAL><EQUAL><ws>+/
  <test_expression>

assertion_function_eq:
  /<call_indicator>EQ<LPAREN>/
  <test_expression>
  /<RPAREN>/

assertion_ok: <assertion_function_ok>

assertion_function_ok: /<call_indicator>OK<empty_parens>?/

assertion_has: <assertion_operator_has> | <assertion_function_has>

assertion_operator_has:
  /<ws>+<TILDE><TILDE><ws>+/
  <test_expression>

assertion_function_has:
  /<call_indicator>HAS<LPAREN>/
  <test_expression>
  /<RPAREN>/

empty_parens: /(?:<LPAREN><ws>*<RPAREN>)/

# TestML Data Section
data_section:
  <testml_data_section> |
  <yaml_data_section>   |
  <json_data_section>   |
  <xml_data_section>

testml_data_section: <data_block>*

yaml_data_section: /(<DASH><DASH><DASH><SPACE>*<EOL><rest>)/

json_data_section: /(<LSQUARE><rest>)/

xml_data_section: /(<LANGLE><rest>)/

rest: /<ANY>+/

data_block:
  <block_header>
  [ <blank_line> | <comment> ]*
  <block_point>*

block_header:
  <block_marker>
  [ /<SPACE>+/ <block_label> ]?
  /<SPACE>*<EOL>/

block_marker: /<EQUAL><EQUAL><EQUAL>/

block_label: <unquoted_string>

block_point: <lines_point> | <phrase_point>

lines_point:
  <point_marker>
  /<SPACE>+/
  <point_name>
  /<SPACE>*<EOL>/
  <point_lines>

point_lines: /((?:(?!<block_marker>|<point_marker>)<line>)*)/

phrase_point:
  <point_marker>
  /<SPACE>+/
  <point_name>
  /<COLON><SPACE>/
  <point_phrase>
  /<EOL>/
  /(?:<comment>|<blank_line>)*/

point_marker: /<DASH><DASH><DASH>/

point_name: /(<LOWER><WORD>*)/

point_phrase: /(<unquoted_string>)/
